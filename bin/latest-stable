#!/usr/bin/env bash

set -euo pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=./lib/utils.bash
. "${plugin_dir}/lib/utils.bash"

# Original scripts of this file <bin/latest_stable>.
# Without param, find the "latest" release marked in Hugo repo.
# If the Hugo team removes "latest", it falls back to latest release tag.
# Returns {string}
asdf_latest_stable() {
	local curl_opts redirect_url version
	curl_opts=(-sI)

	if [ -n "${GITHUB_API_TOKEN:-}" ]; then
		curl_opts=("${curl_opts[@]}" -H "Authorization: token $GITHUB_API_TOKEN")
	fi

	# curl of REPO/releases/latest is expected to be a 302 to another URL
	# when no releases redirect_url="REPO/releases"
	# when there are releases redirect_url="REPO/releases/tag/v<VERSION>"
	redirect_url=$(curl "${curl_opts[@]}" "$GH_REPO/releases/latest" | sed -n -e "s|^location: *||p" | sed -n -e "s|\r||p")
	version=
	printf "redirect url: %s\n" "$redirect_url" >&2
	if [[ "$redirect_url" == "$GH_REPO/releases" ]]; then
		version="$(list_all_versions | sort_versions | tail -n1 | xargs echo)"
	else
		version="$(printf "%s\n" "$redirect_url" | sed 's|.*/tag/v\{0,1\}||')"
	fi

	printf "%s\n" "$version"
}

query="$1"

# Cli `asdf latest hugo` and similar.
# Use `asdf_latest_stable`.
if [[ "$query" == '[0-9]' ]]; then
	asdf_latest_stable
	exit # early.
fi

formatted_query="$(format_query "$query")"
edition=
version=

# Cli `latest:ex` and similar.
# Use `asdf_latest_stable`.
if [[ "$formatted_query" == 'extended' ]]; then
	version="$(asdf_latest_stable)"
	printf "%s-%s\n" "$formatted_query" "$version"
	exit # early.
fi

# Cli `latest:ex-0.100` and similar.
# Use last version in search result.
if [[ "$formatted_query" == 'extended-'* ]]; then
	edition='extended-'
	version="${formatted_query#extended-}"
else
	edition=''
	version="$formatted_query"
fi

# Use last version in search result.
version="$(list_all_versions | grep "^$version" | sort_versions | tail -n1 | xargs echo)"
printf "%s%s\n" "$edition" "$version"
